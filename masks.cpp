#ifndef MSK_INCLUDE
#define MSK_INCLUDE

#include <iostream>

const int N_MASKS = 10;
const int L_MASKS = 6;
bool first_index = 1;
int mask_0 = 2;

int gen_index()
{
    if (first_index)
    {
        srand(time(NULL));
        first_index = 0;
    }

    if (rand() % 2 == 1 && mask_0 >= 3)
    {
        mask_0 = 0;
        return (rand() % (N_MASKS - 1) + 1);
    }
    else
    {
        mask_0++;
        return 0;
    }
}

const int mask[N_MASKS][L_MASKS][L_MASKS] = {
    {//0
    {0, 0, 0, 0, 0, 0},
    {0, 0, 0, 0, 0, 0},
    {0, 0, 0, 0, 0, 0},
    {0, 0, 0, 0, 0, 0},
    {0, 0, 0, 0, 0, 0},
    {0, 0, 0, 0, 0, 0}},
    {//1
    {0, 0, 0, 0, 1, 1},
    {0, 0, 0, 1, 1, 1},
    {0, 0, 1, 1, 1, 0},
    {0, 1, 1, 1, 0, 0},
    {1, 1, 1, 0, 0, 0},
    {1, 1, 0, 0, 0, 0}},
    {//2
    {1, 1, 0, 0, 0, 0},
    {1, 1, 1, 0, 0, 0},
    {0, 1, 1, 1, 0, 0},
    {0, 0, 1, 1, 1, 0},
    {0, 0, 0, 1, 1, 1},
    {0, 0, 0, 0, 1, 1}},
    {//3
    {0, 0, 1, 1, 0, 0},
    {0, 0, 1, 1, 0, 0},
    {0, 0, 1, 1, 0, 0},
    {0, 0, 1, 1, 0, 0},
    {0, 0, 1, 1, 0, 0},
    {0, 0, 1, 1, 0, 0}},
    {//4
    {0, 0, 0, 0, 0, 0},
    {0, 0, 0, 0, 0, 0},
    {1, 1, 1, 1, 1, 1},
    {1, 1, 1, 1, 1, 1},
    {0, 0, 0, 0, 0, 0},
    {0, 0, 0, 0, 0, 0}},
    {//5
    {0, 0, 0, 0, 1, 1},
    {0, 0, 0, 0, 1, 1},
    {0, 0, 0, 0, 0, 0},
    {1, 1, 0, 0, 0, 0},
    {1, 1, 0, 0, 1, 1},
    {0, 0, 0, 0, 1, 1}},
    {//6
    {1, 1, 1, 0, 0, 0},
    {1, 1, 1, 0, 0, 0},
    {0, 0, 0, 0, 0, 0},
    {0, 0, 0, 0, 0, 0},
    {0, 0, 0, 1, 1, 1},
    {0, 0, 0, 1, 1, 1}},
    {//7
    {0, 1, 1, 0, 0, 0},
    {0, 1, 1, 0, 0, 0},
    {0, 1, 1, 0, 0, 0},
    {0, 0, 0, 0, 1, 1},
    {0, 0, 0, 0, 1, 1},
    {0, 0, 0, 0, 1, 1}},
    {//8
    {0, 0, 0, 1, 0, 0},
    {0, 0, 0, 1, 0, 0},
    {1, 1, 1, 1, 1, 1},
    {0, 0, 0, 1, 0, 0},
    {0, 0, 0, 1, 0, 0},
    {0, 0, 0, 1, 0, 0}},
    {//9
    {0, 0, 1, 0, 0, 0},
    {0, 0, 1, 0, 0, 0},
    {0, 0, 1, 0, 0, 0},
    {1, 1, 1, 1, 1, 1},
    {0, 0, 1, 0, 0, 0},
    {0, 0, 1, 0, 0, 0}}
};

#endif
